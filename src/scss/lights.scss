@import "mixins";
@import "variables";

@import "normalize";
@import "animations";
@import "common";

html {
  background: $darkBlue;
  color: $white;
}

button {
  color: $black;
  border: 0;
  outline: 0;
  background: $secondary;
  &:hover {
    background: $secondaryLight;
  }
  &.active {
    background: $secondaryLight;
    &:after {
      content: " \2713";
      margin-left: 4px;
      display: inline-block;
    }
  }
}

$nav-height: 40px;
.nav {
  text-align: right;
  width: 100%;
  height: $nav-height;
  position: fixed;
  top: 0;
  left: 0;
  z-index: 100;

  .nav-item {
    display: inline-block;
    padding: 0 0.6em;
    height: $nav-height;
    line-height: $nav-height;
    text-transform: uppercase;
    font-size: 0.8em;
  }
}

.message.main {
  margin: 0 20px;
  background: $highlight;
  font-size: 0.8em;
  text-align: center;
  position: fixed;
  top: $nav-height;
  right: 0;
  width: 0;
  height: 0;
  overflow: hidden;
  z-index: 200;
  @include transform(translate3d(0, 100%, 0));

  &.active {
    @include transform(none);
    width: auto;
    height: auto;
  }
}

#main {

}

.intro,
.empty {
  padding: 30px;
  text-align: center;
}

.relationships-wrapper {
  text-align: center;
  position: relative;
  margin: 0 auto;
  padding: 20px;
  // max-width: 1200px;

  .relationship {
    display: inline-block;
    width: 400px;
    margin: 0 8px 20px;
    position: relative;
    @include box-sizing();
    @include animation(fadeIn 9s);

    @for $i from 1 through 9 {
      &[level="#{$i}"] {
        @include animation-duration(#{(9-$i)/2}s);
      }
    }
  }

  .caption {
    padding: 0.5em 0;
    text-align: left;
    @include clearfix();
    .left {
      float: left;
    }
    .right {
      float: right;
      text-align: right;
    }

    .light-label {
      text-transform: uppercase;
      letter-spacing: 1px;
      color: $grayDark;
      font-size: 0.7em;
    }
    .energy-label {
      color: $yellow;
      font-weight: bold;
    }
    .meeting-label {
      font-size: 0.8em;
      color: $grayLight;
    }
  }

  .light {
    width: 100%;
    padding-top: percentage(1/$lightImageRatio);
    position: relative;
    background: url(../img/lights/workspace/light0.jpg) center no-repeat;
    background-size: 100% auto;
    position: relative;
    border: 1px solid $grayDarkest;
    overflow: hidden;

    .flicker {
      position: absolute;
      top: 0;
      bottom: 0;
      left: 0;
      right: 0;
      background: url(../img/lights/workspace/light0.jpg) center no-repeat;
      background-size: 100% auto;
      z-index: 2;
      @include animation(fadeInOut 12s infinite);
    }

    &:after {
      background: url(../img/grain.gif);
      content: '';
      display: block;
      position: absolute;
      top: 0;
      left: 0;
      bottom: 0;
      right: 0;
      opacity: 0.035;
      z-index: 3;
      // @include animation(grain 5s steps(10) infinite);
    }

    @for $i from 1 through 9 {
      &.level#{$i} {
        background-image: url(../img/lights/workspace/light#{$i - 1}.jpg);
        .flicker {
          background-image: url(../img/lights/workspace/light#{$i}.jpg);
          @include animation-duration(#{12-$i}s);
        }
      }
    }
  }

  // create a pseudo-random animation effect by adding delays
  .relationship {
    @for $i from 1 through 7 {
      &:nth-child(8n+#{$i}) {
        .light.flicker {
          @include animation-delay(#{8-$i}s);
        }
      }
    }

    &:hover {
      .light {
        border: 1px solid $gray;
      }
    }
  }

}

.space {
  margin-top: $nav-height;

  .intro,
  .empty {
    display: none;
    &.active {
      display: block;
    }
  }
}

form {
  margin: $nav-height auto;

  label {
    display: block;
    margin-top: 1em;
  }

  input,
  textarea,
  select {
    display: block;
    margin: 0.5em 0 1em;
    color: $black;
    border: 0;
    outline: none;
    padding: 5px 10px;
  }

  button {
    display: block;
    margin-top: 1em;
    max-width: 200px;
    color: $white;
    padding: 5px 10px;
    border: 0;
    background: $grayDarker;

    &:hover {
      background: $grayDark;
    }

    &.active {
      background: $grayDark;
    }
  }

  h2 select {
    display: inline-block;
  }
}

.form {
  margin-top: 120px;
  max-width: 186px;
}

.button-group {
  display: flex;
  justify-content: space-between;

  button {
    flex-grow: 1;
  }
}

.meeting-list {
  max-height: 70vh;
  overflow: hidden;
  overflow-y: auto;

  .meeting {
    padding: 1em 0;
    border-top: 1px solid lighten($grayDarkest, 5%);
    position: relative;
  }

  .method {
    text-transform: uppercase;
    color: $grayDark;
  }

  .date {
    margin: 5px 0;
  }

  .notes {
    color: $gray;
    font-size: 0.9em;
  }

  .edit-meeting {
    position: absolute;
    top: 20px;
    right: 0;
  }
}

$modal-max-width: 600px;
.modal {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  z-index: 2000;
  width: 0;
  height: 0;
  overflow: hidden;
  @include transform(translate3d(0, 100%, 0));

  // Show modal when requested
  &.active {
    @include transform(none);
    width: auto;
    height: auto;
  }

  // Content Area
  .modal-content {
    position: absolute;
    top: 60px;
    left: 50%;
    z-index: 20;
    margin-left: -($modal-max-width / 2);
    width: $modal-max-width;
    overflow-x: hidden;
    -webkit-overflow-scrolling: touch; // Native style momentum scrolling
    background: $grayDarkest;
    padding: 20px;
    @include box-sizing();
  }

  // A close button
  .modal-close {
    display: block;
    height: 1px; // Prevent close element to appear
    clip: rect(0 0 0 0);
    margin: -1px;
    overflow: hidden;

    &:focus:after {
      outline: none;
    }

    // Background as close
    &:before {
      content: '';
      position: absolute;
      top: 0;
      left: 0;
      right: 0;
      bottom: 0;
      z-index: 10;
      background: rgba($black, 0.8);
    }

    // Actual close button on modal
    &:after {
      content: '\00d7';
      position: absolute;
      top: 56px;
      right: 50%;
      z-index: 1001;
      margin-right: -($modal-max-width / 2) + 10px;
      cursor: pointer;
      font-size: 2em;
    }
  }

  h2, h3, h4 {
    text-transform: uppercase;
    letter-spacing: 2px;
    font-weight: normal;
    margin-top: 0;
  }

  h2 select {
    margin-bottom: 0;
  }

  h4 {
    color: $grayDark;
  }

  form {
    margin: 0 auto;
  }

  .button-group {
    padding-top: 1em;
    margin: 1em -20px -20px;

    button {
      padding-top: 1em;
      padding-bottom: 1em;
      border-left: 1px solid rgba($black, 0.3);

      &:first-child {
        border-left: 0;
      }
    }
  }

  form .button-group {
    margin: 0;
    padding: 0;

    button {
      margin-top: 0;
    }
  }

  // When screen isn't as wide as the modal anymore
  @media screen and (max-width: $modal-max-width + 40) {
    .modal-content {
      width: auto;
      left: 20px;
      right: 20px;
      margin-left: 0;
    }

    .modal-close {
      &:after {
        margin-right: 10px;
        right: 20px;
      }
    }
  }
}
